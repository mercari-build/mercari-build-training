#stage build
FROM golang:alpine as builder

RUN apk update && apk add --no-cache gcc musl-dev

WORKDIR /go/src/app

COPY go.mod go.sum ./

RUN go mod download

COPY database /go/src/app/database

COPY images /go/src/app/images

COPY app/ .

RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o main .

#stage execute
FROM alpine:latest

RUN apk update && apk add --no-cache libc6-compat

RUN apk add --no-cache curl

WORKDIR /root/

COPY --from=builder /go/src/app/main .

COPY --from=builder /go/src/app/database ./database

COPY --from=builder /go/src/app/images ./images

EXPOSE 9000

CMD ["./main"]
